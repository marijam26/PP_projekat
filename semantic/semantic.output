Grammar

    0 $accept: program $end

    1 program: struct_list function_list

    2 struct_list: %empty
    3            | struct_list struct

    4 $@1: %empty

    5 struct: _STRUCT _ID $@1 _LBRACKET struct_variable_list _RBRACKET _SEMICOLON

    6 struct_variable_list: %empty
    7                     | struct_variable_list struct_variable

    8 struct_variable: _TYPE _ID _SEMICOLON

    9 function_list: function
   10              | function_list function

   11 $@2: %empty

   12 function: _TYPE _ID $@2 _LPAREN parameter_list _RPAREN body

   13 parameter_list: %empty
   14               | parameters

   15 parameters: parameter
   16           | parameters _COMMA parameter

   17 parameter: _TYPE _ID

   18 body: _LBRACKET variable_list statement_list _RBRACKET

   19 variable_list: %empty
   20              | variable_list variable

   21 variable: _TYPE _ID _SEMICOLON
   22         | struct_inicialization

   23 statement_list: %empty
   24               | statement_list statement

   25 statement: compound_statement
   26          | assignment_statement
   27          | if_statement
   28          | return_statement
   29          | inc_statement
   30          | branch_statement

   31 $@3: %empty

   32 struct_inicialization: _STRUCT _ID _ID $@3 _SEMICOLON

   33 $@4: %empty

   34 $@5: %empty

   35 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON const_list $@5 _RPAREN do_part

   36 const_list: literal
   37           | const_list _COMMA literal

   38 do_part: _DO_START statement _DO_END
   39        | do_part _DO_START statement _DO_END

   40 inc_statement: _ID _INC _SEMICOLON

   41 @6: %empty

   42 compound_statement: _LBRACKET @6 variable_list statement_list _RBRACKET

   43 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   44                     | _ID _DOT _ID _ASSIGN num_exp _SEMICOLON

   45 num_exp: exp
   46        | num_exp _AROP exp

   47 exp: literal
   48    | _ID
   49    | _ID _INC
   50    | function_call
   51    | _LPAREN num_exp _RPAREN

   52 literal: _INT_NUMBER
   53        | _UINT_NUMBER

   54 $@7: %empty

   55 function_call: _ID $@7 _LPAREN argument_list _RPAREN

   56 argument_list: %empty
   57              | arguments

   58 arguments: argument
   59          | arguments _COMMA argument

   60 argument: num_exp

   61 if_statement: if_part
   62             | if_part _ELSE statement

   63 if_part: _IF _LPAREN rel_exp _RPAREN statement

   64 rel_exp: num_exp _RELOP num_exp

   65 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 8 12 17 21
    _IF (259) 63
    _ELSE (260) 62
    _RETURN (261) 65
    _ID <s> (262) 5 8 12 17 21 32 35 40 43 44 48 49 55
    _INT_NUMBER <s> (263) 52
    _UINT_NUMBER <s> (264) 53
    _LPAREN (265) 12 35 51 55 63
    _RPAREN (266) 12 35 51 55 63
    _LBRACKET (267) 5 18 42
    _RBRACKET (268) 5 18 42
    _ASSIGN (269) 43 44
    _SEMICOLON (270) 5 8 21 32 35 40 43 44 65
    _INC (271) 40 49
    _BRANCH (272) 35
    _DO_START (273) 38 39
    _DO_END (274) 38 39
    _COMMA (275) 16 37 59
    _AROP <i> (276) 46
    _RELOP <i> (277) 64
    _STRUCT (278) 5 32
    _DOT (279) 44
    ONLY_IF (280)


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    program (27)
        on left: 1
        on right: 0
    struct_list (28)
        on left: 2 3
        on right: 1 3
    struct (29)
        on left: 5
        on right: 3
    $@1 (30)
        on left: 4
        on right: 5
    struct_variable_list (31)
        on left: 6 7
        on right: 5 7
    struct_variable (32)
        on left: 8
        on right: 7
    function_list (33)
        on left: 9 10
        on right: 1 10
    function (34)
        on left: 12
        on right: 9 10
    $@2 (35)
        on left: 11
        on right: 12
    parameter_list (36)
        on left: 13 14
        on right: 12
    parameters (37)
        on left: 15 16
        on right: 14 16
    parameter (38)
        on left: 17
        on right: 15 16
    body (39)
        on left: 18
        on right: 12
    variable_list (40)
        on left: 19 20
        on right: 18 20 42
    variable (41)
        on left: 21 22
        on right: 20
    statement_list (42)
        on left: 23 24
        on right: 18 24 42
    statement (43)
        on left: 25 26 27 28 29 30
        on right: 24 38 39 62 63
    struct_inicialization (44)
        on left: 32
        on right: 22
    $@3 (45)
        on left: 31
        on right: 32
    branch_statement (46)
        on left: 35
        on right: 30
    $@4 (47)
        on left: 33
        on right: 35
    $@5 (48)
        on left: 34
        on right: 35
    const_list (49)
        on left: 36 37
        on right: 35 37
    do_part (50)
        on left: 38 39
        on right: 35 39
    inc_statement (51)
        on left: 40
        on right: 29
    compound_statement (52)
        on left: 42
        on right: 25
    @6 (53)
        on left: 41
        on right: 42
    assignment_statement (54)
        on left: 43 44
        on right: 26
    num_exp <i> (55)
        on left: 45 46
        on right: 43 44 46 51 60 64 65
    exp <i> (56)
        on left: 47 48 49 50 51
        on right: 45 46
    literal <i> (57)
        on left: 52 53
        on right: 36 37 47
    function_call <i> (58)
        on left: 55
        on right: 50
    $@7 (59)
        on left: 54
        on right: 55
    argument_list (60)
        on left: 56 57
        on right: 55
    arguments (61)
        on left: 58 59
        on right: 57 59
    argument <i> (62)
        on left: 60
        on right: 58 59
    if_statement (63)
        on left: 61 62
        on right: 27
    if_part (64)
        on left: 63
        on right: 61 62
    rel_exp <i> (65)
        on left: 64
        on right: 63
    return_statement (66)
        on left: 65
        on right: 28


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (struct_list)

    program      go to state 1
    struct_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: struct_list . function_list
    3 struct_list: struct_list . struct

    _TYPE    shift, and go to state 4
    _STRUCT  shift, and go to state 5

    struct         go to state 6
    function_list  go to state 7
    function       go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

   12 function: _TYPE . _ID $@2 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 9


State 5

    5 struct: _STRUCT . _ID $@1 _LBRACKET struct_variable_list _RBRACKET _SEMICOLON

    _ID  shift, and go to state 10


State 6

    3 struct_list: struct_list struct .

    $default  reduce using rule 3 (struct_list)


State 7

    1 program: struct_list function_list .
   10 function_list: function_list . function

    _TYPE  shift, and go to state 4

    $default  reduce using rule 1 (program)

    function  go to state 11


State 8

    9 function_list: function .

    $default  reduce using rule 9 (function_list)


State 9

   12 function: _TYPE _ID . $@2 _LPAREN parameter_list _RPAREN body

    $default  reduce using rule 11 ($@2)

    $@2  go to state 12


State 10

    5 struct: _STRUCT _ID . $@1 _LBRACKET struct_variable_list _RBRACKET _SEMICOLON

    $default  reduce using rule 4 ($@1)

    $@1  go to state 13


State 11

   10 function_list: function_list function .

    $default  reduce using rule 10 (function_list)


State 12

   12 function: _TYPE _ID $@2 . _LPAREN parameter_list _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    5 struct: _STRUCT _ID $@1 . _LBRACKET struct_variable_list _RBRACKET _SEMICOLON

    _LBRACKET  shift, and go to state 15


State 14

   12 function: _TYPE _ID $@2 _LPAREN . parameter_list _RPAREN body

    _TYPE  shift, and go to state 16

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 17
    parameters      go to state 18
    parameter       go to state 19


State 15

    5 struct: _STRUCT _ID $@1 _LBRACKET . struct_variable_list _RBRACKET _SEMICOLON

    $default  reduce using rule 6 (struct_variable_list)

    struct_variable_list  go to state 20


State 16

   17 parameter: _TYPE . _ID

    _ID  shift, and go to state 21


State 17

   12 function: _TYPE _ID $@2 _LPAREN parameter_list . _RPAREN body

    _RPAREN  shift, and go to state 22


State 18

   14 parameter_list: parameters .
   16 parameters: parameters . _COMMA parameter

    _COMMA  shift, and go to state 23

    $default  reduce using rule 14 (parameter_list)


State 19

   15 parameters: parameter .

    $default  reduce using rule 15 (parameters)


State 20

    5 struct: _STRUCT _ID $@1 _LBRACKET struct_variable_list . _RBRACKET _SEMICOLON
    7 struct_variable_list: struct_variable_list . struct_variable

    _TYPE      shift, and go to state 24
    _RBRACKET  shift, and go to state 25

    struct_variable  go to state 26


State 21

   17 parameter: _TYPE _ID .

    $default  reduce using rule 17 (parameter)


State 22

   12 function: _TYPE _ID $@2 _LPAREN parameter_list _RPAREN . body

    _LBRACKET  shift, and go to state 27

    body  go to state 28


State 23

   16 parameters: parameters _COMMA . parameter

    _TYPE  shift, and go to state 16

    parameter  go to state 29


State 24

    8 struct_variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 30


State 25

    5 struct: _STRUCT _ID $@1 _LBRACKET struct_variable_list _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 31


State 26

    7 struct_variable_list: struct_variable_list struct_variable .

    $default  reduce using rule 7 (struct_variable_list)


State 27

   18 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 19 (variable_list)

    variable_list  go to state 32


State 28

   12 function: _TYPE _ID $@2 _LPAREN parameter_list _RPAREN body .

    $default  reduce using rule 12 (function)


State 29

   16 parameters: parameters _COMMA parameter .

    $default  reduce using rule 16 (parameters)


State 30

    8 struct_variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 33


State 31

    5 struct: _STRUCT _ID $@1 _LBRACKET struct_variable_list _RBRACKET _SEMICOLON .

    $default  reduce using rule 5 (struct)


State 32

   18 body: _LBRACKET variable_list . statement_list _RBRACKET
   20 variable_list: variable_list . variable

    _TYPE    shift, and go to state 34
    _STRUCT  shift, and go to state 35

    $default  reduce using rule 23 (statement_list)

    variable               go to state 36
    statement_list         go to state 37
    struct_inicialization  go to state 38


State 33

    8 struct_variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 8 (struct_variable)


State 34

   21 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 39


State 35

   32 struct_inicialization: _STRUCT . _ID _ID $@3 _SEMICOLON

    _ID  shift, and go to state 40


State 36

   20 variable_list: variable_list variable .

    $default  reduce using rule 20 (variable_list)


State 37

   18 body: _LBRACKET variable_list statement_list . _RBRACKET
   24 statement_list: statement_list . statement

    _IF        shift, and go to state 41
    _RETURN    shift, and go to state 42
    _ID        shift, and go to state 43
    _LBRACKET  shift, and go to state 44
    _RBRACKET  shift, and go to state 45
    _BRANCH    shift, and go to state 46

    statement             go to state 47
    branch_statement      go to state 48
    inc_statement         go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 38

   22 variable: struct_inicialization .

    $default  reduce using rule 22 (variable)


State 39

   21 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 55


State 40

   32 struct_inicialization: _STRUCT _ID . _ID $@3 _SEMICOLON

    _ID  shift, and go to state 56


State 41

   63 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 57


State 42

   65 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 62
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65


State 43

   40 inc_statement: _ID . _INC _SEMICOLON
   43 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   44                     | _ID . _DOT _ID _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 66
    _INC     shift, and go to state 67
    _DOT     shift, and go to state 68


State 44

   42 compound_statement: _LBRACKET . @6 variable_list statement_list _RBRACKET

    $default  reduce using rule 41 (@6)

    @6  go to state 69


State 45

   18 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 18 (body)


State 46

   35 branch_statement: _BRANCH . _LPAREN _ID $@4 _SEMICOLON const_list $@5 _RPAREN do_part

    _LPAREN  shift, and go to state 70


State 47

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 48

   30 statement: branch_statement .

    $default  reduce using rule 30 (statement)


State 49

   29 statement: inc_statement .

    $default  reduce using rule 29 (statement)


State 50

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


State 51

   26 statement: assignment_statement .

    $default  reduce using rule 26 (statement)


State 52

   27 statement: if_statement .

    $default  reduce using rule 27 (statement)


State 53

   61 if_statement: if_part .
   62             | if_part . _ELSE statement

    _ELSE  shift, and go to state 71

    $default  reduce using rule 61 (if_statement)


State 54

   28 statement: return_statement .

    $default  reduce using rule 28 (statement)


State 55

   21 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 21 (variable)


State 56

   32 struct_inicialization: _STRUCT _ID _ID . $@3 _SEMICOLON

    $default  reduce using rule 31 ($@3)

    $@3  go to state 72


State 57

   63 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 73
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65
    rel_exp        go to state 74


State 58

   48 exp: _ID .
   49    | _ID . _INC
   55 function_call: _ID . $@7 _LPAREN argument_list _RPAREN

    _INC  shift, and go to state 75

    _LPAREN   reduce using rule 54 ($@7)
    $default  reduce using rule 48 (exp)

    $@7  go to state 76


State 59

   52 literal: _INT_NUMBER .

    $default  reduce using rule 52 (literal)


State 60

   53 literal: _UINT_NUMBER .

    $default  reduce using rule 53 (literal)


State 61

   51 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 77
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65


State 62

   46 num_exp: num_exp . _AROP exp
   65 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 78
    _AROP       shift, and go to state 79


State 63

   45 num_exp: exp .

    $default  reduce using rule 45 (num_exp)


State 64

   47 exp: literal .

    $default  reduce using rule 47 (exp)


State 65

   50 exp: function_call .

    $default  reduce using rule 50 (exp)


State 66

   43 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 80
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65


State 67

   40 inc_statement: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 68

   44 assignment_statement: _ID _DOT . _ID _ASSIGN num_exp _SEMICOLON

    _ID  shift, and go to state 82


State 69

   42 compound_statement: _LBRACKET @6 . variable_list statement_list _RBRACKET

    $default  reduce using rule 19 (variable_list)

    variable_list  go to state 83


State 70

   35 branch_statement: _BRANCH _LPAREN . _ID $@4 _SEMICOLON const_list $@5 _RPAREN do_part

    _ID  shift, and go to state 84


State 71

   62 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 41
    _RETURN    shift, and go to state 42
    _ID        shift, and go to state 43
    _LBRACKET  shift, and go to state 44
    _BRANCH    shift, and go to state 46

    statement             go to state 85
    branch_statement      go to state 48
    inc_statement         go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 72

   32 struct_inicialization: _STRUCT _ID _ID $@3 . _SEMICOLON

    _SEMICOLON  shift, and go to state 86


State 73

   46 num_exp: num_exp . _AROP exp
   64 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 79
    _RELOP  shift, and go to state 87


State 74

   63 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 88


State 75

   49 exp: _ID _INC .

    $default  reduce using rule 49 (exp)


State 76

   55 function_call: _ID $@7 . _LPAREN argument_list _RPAREN

    _LPAREN  shift, and go to state 89


State 77

   46 num_exp: num_exp . _AROP exp
   51 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 90
    _AROP    shift, and go to state 79


State 78

   65 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 65 (return_statement)


State 79

   46 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    exp            go to state 91
    literal        go to state 64
    function_call  go to state 65


State 80

   43 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   46 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 92
    _AROP       shift, and go to state 79


State 81

   40 inc_statement: _ID _INC _SEMICOLON .

    $default  reduce using rule 40 (inc_statement)


State 82

   44 assignment_statement: _ID _DOT _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 93


State 83

   20 variable_list: variable_list . variable
   42 compound_statement: _LBRACKET @6 variable_list . statement_list _RBRACKET

    _TYPE    shift, and go to state 34
    _STRUCT  shift, and go to state 35

    $default  reduce using rule 23 (statement_list)

    variable               go to state 36
    statement_list         go to state 94
    struct_inicialization  go to state 38


State 84

   35 branch_statement: _BRANCH _LPAREN _ID . $@4 _SEMICOLON const_list $@5 _RPAREN do_part

    $default  reduce using rule 33 ($@4)

    $@4  go to state 95


State 85

   62 if_statement: if_part _ELSE statement .

    $default  reduce using rule 62 (if_statement)


State 86

   32 struct_inicialization: _STRUCT _ID _ID $@3 _SEMICOLON .

    $default  reduce using rule 32 (struct_inicialization)


State 87

   64 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 96
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65


State 88

   63 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 41
    _RETURN    shift, and go to state 42
    _ID        shift, and go to state 43
    _LBRACKET  shift, and go to state 44
    _BRANCH    shift, and go to state 46

    statement             go to state 97
    branch_statement      go to state 48
    inc_statement         go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 89

   55 function_call: _ID $@7 _LPAREN . argument_list _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    $default  reduce using rule 56 (argument_list)

    num_exp        go to state 98
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65
    argument_list  go to state 99
    arguments      go to state 100
    argument       go to state 101


State 90

   51 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 51 (exp)


State 91

   46 num_exp: num_exp _AROP exp .

    $default  reduce using rule 46 (num_exp)


State 92

   43 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 43 (assignment_statement)


State 93

   44 assignment_statement: _ID _DOT _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 102
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65


State 94

   24 statement_list: statement_list . statement
   42 compound_statement: _LBRACKET @6 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 41
    _RETURN    shift, and go to state 42
    _ID        shift, and go to state 43
    _LBRACKET  shift, and go to state 44
    _RBRACKET  shift, and go to state 103
    _BRANCH    shift, and go to state 46

    statement             go to state 47
    branch_statement      go to state 48
    inc_statement         go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 95

   35 branch_statement: _BRANCH _LPAREN _ID $@4 . _SEMICOLON const_list $@5 _RPAREN do_part

    _SEMICOLON  shift, and go to state 104


State 96

   46 num_exp: num_exp . _AROP exp
   64 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 79

    $default  reduce using rule 64 (rel_exp)


State 97

   63 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 63 (if_part)


State 98

   46 num_exp: num_exp . _AROP exp
   60 argument: num_exp .

    _AROP  shift, and go to state 79

    $default  reduce using rule 60 (argument)


State 99

   55 function_call: _ID $@7 _LPAREN argument_list . _RPAREN

    _RPAREN  shift, and go to state 105


State 100

   57 argument_list: arguments .
   59 arguments: arguments . _COMMA argument

    _COMMA  shift, and go to state 106

    $default  reduce using rule 57 (argument_list)


State 101

   58 arguments: argument .

    $default  reduce using rule 58 (arguments)


State 102

   44 assignment_statement: _ID _DOT _ID _ASSIGN num_exp . _SEMICOLON
   46 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 107
    _AROP       shift, and go to state 79


State 103

   42 compound_statement: _LBRACKET @6 variable_list statement_list _RBRACKET .

    $default  reduce using rule 42 (compound_statement)


State 104

   35 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON . const_list $@5 _RPAREN do_part

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    const_list  go to state 108
    literal     go to state 109


State 105

   55 function_call: _ID $@7 _LPAREN argument_list _RPAREN .

    $default  reduce using rule 55 (function_call)


State 106

   59 arguments: arguments _COMMA . argument

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 61

    num_exp        go to state 98
    exp            go to state 63
    literal        go to state 64
    function_call  go to state 65
    argument       go to state 110


State 107

   44 assignment_statement: _ID _DOT _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 44 (assignment_statement)


State 108

   35 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON const_list . $@5 _RPAREN do_part
   37 const_list: const_list . _COMMA literal

    _COMMA  shift, and go to state 111

    $default  reduce using rule 34 ($@5)

    $@5  go to state 112


State 109

   36 const_list: literal .

    $default  reduce using rule 36 (const_list)


State 110

   59 arguments: arguments _COMMA argument .

    $default  reduce using rule 59 (arguments)


State 111

   37 const_list: const_list _COMMA . literal

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 113


State 112

   35 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON const_list $@5 . _RPAREN do_part

    _RPAREN  shift, and go to state 114


State 113

   37 const_list: const_list _COMMA literal .

    $default  reduce using rule 37 (const_list)


State 114

   35 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON const_list $@5 _RPAREN . do_part

    _DO_START  shift, and go to state 115

    do_part  go to state 116


State 115

   38 do_part: _DO_START . statement _DO_END

    _IF        shift, and go to state 41
    _RETURN    shift, and go to state 42
    _ID        shift, and go to state 43
    _LBRACKET  shift, and go to state 44
    _BRANCH    shift, and go to state 46

    statement             go to state 117
    branch_statement      go to state 48
    inc_statement         go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 116

   35 branch_statement: _BRANCH _LPAREN _ID $@4 _SEMICOLON const_list $@5 _RPAREN do_part .
   39 do_part: do_part . _DO_START statement _DO_END

    _DO_START  shift, and go to state 118

    $default  reduce using rule 35 (branch_statement)


State 117

   38 do_part: _DO_START statement . _DO_END

    _DO_END  shift, and go to state 119


State 118

   39 do_part: do_part _DO_START . statement _DO_END

    _IF        shift, and go to state 41
    _RETURN    shift, and go to state 42
    _ID        shift, and go to state 43
    _LBRACKET  shift, and go to state 44
    _BRANCH    shift, and go to state 46

    statement             go to state 120
    branch_statement      go to state 48
    inc_statement         go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 119

   38 do_part: _DO_START statement _DO_END .

    $default  reduce using rule 38 (do_part)


State 120

   39 do_part: do_part _DO_START statement . _DO_END

    _DO_END  shift, and go to state 121


State 121

   39 do_part: do_part _DO_START statement _DO_END .

    $default  reduce using rule 39 (do_part)
